//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class BookStoreManagerEntities1 : DbContext
    {
        public BookStoreManagerEntities1()
            : base("name=BookStoreManagerEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<BANK_ACCOUNT> BANK_ACCOUNT { get; set; }
        public virtual DbSet<BOOK_COLLECTION> BOOK_COLLECTION { get; set; }
        public virtual DbSet<BOOK_EDITION> BOOK_EDITION { get; set; }
        public virtual DbSet<BOOK_EDITION_IMAGE> BOOK_EDITION_IMAGE { get; set; }
        public virtual DbSet<BOOK_REVIEW> BOOK_REVIEW { get; set; }
        public virtual DbSet<CATEGORY> CATEGORies { get; set; }
        public virtual DbSet<CUSTOMER_ORDER> CUSTOMER_ORDER { get; set; }
        public virtual DbSet<CUSTOMER_ORDER_DETAIL> CUSTOMER_ORDER_DETAIL { get; set; }
        public virtual DbSet<MANAGER> MANAGERs { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<PROMOTION> PROMOTIONs { get; set; }
        public virtual DbSet<PUBLISHER> PUBLISHERs { get; set; }
        public virtual DbSet<SHIP_CONFIRMATION> SHIP_CONFIRMATION { get; set; }
        public virtual DbSet<STOCK_INVENTORY> STOCK_INVENTORY { get; set; }
        public virtual DbSet<STOCK_RECEIVED_NOTE> STOCK_RECEIVED_NOTE { get; set; }
        public virtual DbSet<STOCK_RECEIVED_NOTE_DETAIL> STOCK_RECEIVED_NOTE_DETAIL { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TIER> TIERs { get; set; }
        public virtual DbSet<TRANSACTION_DETAILS> TRANSACTION_DETAILS { get; set; }
        public virtual DbSet<WALLET> WALLETs { get; set; }

        public virtual DbSet<V_CustomerSpending> V_CustomerSpending { get; set; }
        public virtual DbSet<V_edition_total_stock_quantity_price_in_this_and_previous_month> V_edition_total_stock_quantity_price_in_this_and_previous_month { get; set; }
        public virtual DbSet<V_UserRole> V_UserRole { get; set; }
        public virtual DbSet<V_revenue_of_each_day> V_revenue_of_each_day { get; set; }
        public virtual DbSet<V_revenue_of_each_month> V_revenue_of_each_month { get; set; }
        public virtual DbSet<V_revenue_of_each_year> V_revenue_of_each_year { get; set; }
    
        public virtual ObjectResult<Sp_check_valid_promotion_Result> Sp_check_valid_promotion(Nullable<int> editionID)
        {
            var editionIDParameter = editionID.HasValue ?
                new ObjectParameter("editionID", editionID) :
                new ObjectParameter("editionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_check_valid_promotion_Result>("Sp_check_valid_promotion", editionIDParameter);
        }
    
        public virtual int SP_Inital_Manager(string accountID)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Inital_Manager", accountIDParameter);
        }
    
        public virtual int SP_Inital_Person(string accountID, Nullable<int> managerID)
        {
            var accountIDParameter = accountID != null ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(string));
    
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("ManagerID", managerID) :
                new ObjectParameter("ManagerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Inital_Person", accountIDParameter, managerIDParameter);
        }
    }
}
